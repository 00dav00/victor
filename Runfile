require "runfile-tasks"
require 'filewatcher'

require_relative 'lib/victor'

name    "Victor Developer Toolbelt"
summary "Runfile tasks for building the Victor gem"
version Victor::VERSION

RunfileTasks::RubyGems.all 'victor'
RunfileTasks::Testing.rspec


help 'Watch example files and rerun them on change'
action :watch do
  say_status :watch, 'examples/*.rb'

  FileWatcher.new("examples/*.rb").watch do |filename, event|
    say_status event, filename
    next if event == :delete

    Dir.chdir 'examples' do
      filename = File.basename filename
      run "ruby #{filename}"
    end
  end
end

help "Generate readme for examples folder"
action :examples do
  say_status :invoke, 'examples'

  result = ["# Examples\n"]
  Dir['examples/*.rb'].each do |file|
    say_status :process, file

    title = File.basename file, '.rb'
    code  = File.read(file).strip
    if File.exist? "examples/#{title}.svg"
      image = "[![#{title}](https://cdn.rawgit.com/DannyBen/victor/master/examples/#{title}.svg)](https://github.com/DannyBen/victor/blob/master/#{file})"
    else
      image = 'No output'
    end

    result.push "## #{title}\n"
    result.push "```ruby"
    result.push code
    result.push "```\n"
    result.push image
    result.push "\n"
  end

  result.push "\n---\n"
  result.push "This file was generated automatically with `run examples`."
  result.push "\n---\n"

  result = result.join "\n"
  File.write 'examples/README.md', result
  say_status :write, 'examples/README.md'
end
